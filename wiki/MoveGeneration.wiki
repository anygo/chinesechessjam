#Move Generation(着法生成器).

= 着法生成器简介 =

“着法生成器”在不同的棋盘游戏引擎中差异较大。本文将向你演示使用位棋盘([Bitboard])时生成着法的基本原理。


= 用什么方式生成着法呢？ =

高级的国际象棋引擎通常具备一次只生成一小部分着法的能力。例如，仅生成象走的着法，马走的着法，导致升变的着法，所有的吃子着法等等，这正是位棋盘的强项。那为什么用这种方式生成着法呢？原因是生成着法耗费一定的时间。如果你的引擎在检查了一部分着法后发现了必须走的棋，那它就无需生成余下的棋步了。因此，你可能想先生成所有吃子的着法，如果没有满意的棋再生成余下的着法。(用来减少耗时的着法生成策略很多——发挥你的想象力吧)。

大名鼎鼎的免费国际象棋引擎Crafty(其作者是Robert Hyatt博士)使用三个着法生成函数。一个用来生成所有伪合法吃子着法，一个生成所有伪合法不吃子着法，最后一个生成所有摆脱被将军状态的着法。注意前两个函数生成的是伪合法的着法。就是说，这些函数生成的着法并非都是合法的。例如，你要生成所有将军的着法并且发现了一步你想走的棋，但随后发现这步不合法再把它抛弃。这看起来很奇怪，但它确实比那种在所有局面下都严格生成合法着法的策略更快！Hyatt博士曾经这样解释：当国王被将时，你需要生成摆脱被将的着法，这时大部分生成的着法是不合法的，在这种局面中你使用生成所有合法着法的策略会帮你节省时间；但在大多数局面中，生成的着法都是合法的，推迟验证合法性会更有效率。
　　记住上面讲的内容，让我们看实际中国象棋生成着法。

= 用什么方式生成着法呢？ =


红车占的位棋盘:（R09）
                 * ---------
		 * 100000000
		 * 100000000
		 * 100000000
		 * 100000000
		 * 100000000
		 * 100000000
		 * 100000000
		 * 111111111
		 * ---------
本方棋子占的位棋盘:
                 * ---------
		 * 000000000
		 * 000000000
		 * 000000000
		 * 000000000
		 * 000000000
		 * 101010101
		 * 010000010
		 * 000000000
		 * 111111111
		 * ---------

对方棋子占的位棋盘:
                 * ---------
		 * 111111111
		 * 000000000
		 * 010000010
		 * 000000000
		 * 101010101
		 * 000000000
		 * 000000000
		 * 000000000
		 * 000000000
		 * ---------


当然，我们可以依次表达其它棋子的位棋盘，特别注意中国象棋中的炮，车，过河兵，将军对面的问题，这个细节在后面章节会有详细说明已经相关对应的数据结构。


计算红车能移动的位棋盘，就是对这本方所有棋子位棋盘的AND运算了，结果如下：

                 * ---------
		 * 000000000
		 * 000000000
		 * 000000000
		 * 000000000
		 * 000000000
		 * 000000000
		 * 100000000
		 * 100000000
		 * 100000000
		 * ---------

计算红车能攻击的位棋盘，就是在启动位置与对方所有有棋子位棋盘的AND运算了，结果如下：

                 * ---------
		 * 000000000
		 * 000000000
		 * 000000000
		 * 000000000
		 * 000000000
		 * 000000000
		 * 000000000
		 * 000000000
		 * 000000000
		 * ---------
此时，基于中国象棋一开始的布局，所以不能吃对方任意棋子。

TBC